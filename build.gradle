buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/milestone/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        //classpath "se.transmode.gradle:gradle-docker:${transmodeGradleDockerVersion}"
    }
}
allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"

    group 'cc.orangejuice'
    version '1.0-SNAPSHOT'
    sourceCompatibility = 11

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/milestone/" }
    }

    dependencies {
        testCompile "org.springframework.boot:spring-boot-starter-test"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    if (project.subprojects) {
        bootJar {
            enabled = false
        }
    }
//    } else {
//        apply plugin: 'docker'
//        docker {
//            maintainer = 'orangejuice <cherrymeteor@outlook.com>'
//            baseImage = 'openjdk:8-jre'
//        }
//        task dockerBuild(type: Docker, dependsOn: build) {
//            applicationName = project.name
//            addFile {
//                from configurations.archives.artifacts.files
//                into './app/' + project.name
//            }
//            workingDir './app/' + project.name
//            setEnvironment('CONFIG_SERVICE_PASSWORD', servicePassword)
//            setEnvironment('NOTIFICATION_SERVICE_PASSWORD', servicePassword)
//            setEnvironment('STATISTICS_SERVICE_PASSWORD', servicePassword)
//            setEnvironment('ACCOUNT_SERVICE_PASSWORD', servicePassword)
//            defaultCommand(['java', '-jar', '-Dspring.profiles.active=docker', "${project.name}-${project.version}.jar"])
//        }
//    }
}